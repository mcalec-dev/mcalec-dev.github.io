const config={name:"mcalec-dev",type:"org"};let allRepos=[];async function fetchData(){try{const e="org"===config.type?`https://api.github.com/orgs/${config.name}`:`https://api.github.com/users/${config.name}`,t=await fetch(e);if(!t.ok)throw new Error("Failed to fetch data");const n=await t.json();document.getElementById("profile-img").src=n.avatar_url,document.getElementById("username").textContent=n.name||n.login;if("org"===config.type){const e=`<p>${n.description||"No description available"}</p>`;document.getElementById("org-desc").innerHTML=e;const t=`<div class="org-stat"><span>üë• ${n.followers||0} Followers</span></div><div class="org-stat"><span></span></div><div class="org-stat"><span>üì¶ ${n.public_repos||0} Repositories</span></div>`;document.getElementById("org-stats").innerHTML=t}return n}catch(e){console.error("Error fetching data:",e),document.getElementById("repos").innerHTML='<div class="error">Failed to load data</div>'}}async function fetchRepos(){try{const e="org"===config.type?`https://api.github.com/orgs/${config.name}/repos?sort=updated&per_page=100`:`https://api.github.com/users/${config.name}/repos?sort=updated&per_page=100`,t=await fetch(e);if(!t.ok)throw new Error("Failed to fetch repositories");allRepos=await t.json(),displayRepos(allRepos)}catch(e){console.error("Error fetching repositories:",e),document.getElementById("repos").innerHTML='<div class="error">Failed to load repositories</div>'}}function displayRepos(e){document.getElementById("repos").innerHTML=e.map(e=>`<div class="repo-card"><a href="${e.html_url}" class="repo-name" target="_blank">${e.name}</a><p class="repo-desc">${e.description||"No description available"}</p><div class="repo-stats"><span>‚≠ê ${e.stargazers_count}</span><span>üîÑ ${e.forks_count}</span><span>üíª ${e.language||"No language"}</span><span>üìÖ ${new Date(e.updated_at).toLocaleDateString()}</span></div></div>`).join("")}function filterAndSortRepos(){const e=document.getElementById("search").value.toLowerCase(),t=document.getElementById("sort").value;let n=allRepos.filter(t=>t.name.toLowerCase().includes(e)||t.description&&t.description.toLowerCase().includes(e));n.sort((e,n)=>{switch(t){case"stars":return n.stargazers_count-e.stargazers_count;case"name":return e.name.localeCompare(n.name);case"updated":return new Date(n.updated_at)-new Date(e.updated_at);default:return 0}}),displayRepos(n)}document.getElementById("search").addEventListener("input",filterAndSortRepos),document.getElementById("sort").addEventListener("change",filterAndSortRepos),fetchData().then(()=>fetchRepos());